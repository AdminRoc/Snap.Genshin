<Page x:Class="DGP.Genshin.Page.UserPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:DGP.Genshin.Page"
      xmlns:s="clr-namespace:DGP.Genshin.Control.Infrastructure.SmoothScrollViewer"
      xmlns:ui="http://schemas.modernwpf.com/2019"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:c="clr-namespace:DGP.Genshin.Control.Infrastructure.CachedImage"
      xmlns:wu="clr-namespace:WPFUI.Controls;assembly=WPFUI"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="900"
      Title="UserPage">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding OpenUICommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Page.Resources>
        <sys:TimeSpan x:Key="RepositionDelay">0:0:0.033</sys:TimeSpan>
        <KeyTime x:Key="RepositionDuration">0:0:0.367</KeyTime>
        <KeySpline x:Key="RepositionKeySpline">0.1,0.9 0.2,1.0</KeySpline>
        <!--Rewrite ToggleSwitch Style-->
        <Style TargetType="ui:ToggleSwitch">
            <Setter Property="Foreground" Value="{DynamicResource ToggleSwitchContentForeground}" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
            <Setter Property="ui:FocusVisualHelper.FocusVisualMargin" Value="-7,-3,-7,-3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ui:ToggleSwitch">
                        <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        SnapsToDevicePixels="True">

                            <VisualStateManager.CustomVisualStateManager>
                                <ui:SimpleVisualStateManager />
                            </VisualStateManager.CustomVisualStateManager>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ToggleStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition x:Name="DraggingToOnTransition" From="Dragging" To="On" GeneratedDuration="0">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" BeginTime="{StaticResource RepositionDelay}">
                                                    <SplineDoubleKeyFrame KeyTime="{StaticResource RepositionDuration}" KeySpline="{StaticResource RepositionKeySpline}" Value="20" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="OnToDraggingTransition" From="On" To="Dragging" GeneratedDuration="0">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="DraggingToOffTransition" From="Dragging" To="Off" GeneratedDuration="0">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" BeginTime="{StaticResource RepositionDelay}">
                                                    <SplineDoubleKeyFrame KeyTime="{StaticResource RepositionDuration}" KeySpline="{StaticResource RepositionKeySpline}" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="OnToOffTransition" From="On" To="Off" GeneratedDuration="0">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" BeginTime="{StaticResource RepositionDelay}">
                                                    <SplineDoubleKeyFrame KeyTime="{StaticResource RepositionDuration}" KeySpline="{StaticResource RepositionKeySpline}" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="OffToOnTransition" From="Off" To="On" GeneratedDuration="0">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" BeginTime="{StaticResource RepositionDelay}">
                                                    <SplineDoubleKeyFrame KeyTime="{StaticResource RepositionDuration}" KeySpline="{StaticResource RepositionKeySpline}" Value="20" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Dragging" />
                                    <VisualState x:Name="Off">
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="KnobTranslateTransform"
                                            Storyboard.TargetProperty="X"
                                            To="0"
                                            Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="On">
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="KnobTranslateTransform"
                                            Storyboard.TargetProperty="X"
                                            To="20"
                                            Duration="0" />
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ContentStates">
                                    <VisualState x:Name="OffContent">
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="OffContentPresenter"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OffContentPresenter">
                                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OnContent">
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="OnContentPresenter"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OnContentPresenter">
                                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <ui:ContentPresenterEx
                                x:Name="HeaderContentPresenter"
                                Grid.Row="0"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                TextElement.Foreground="{DynamicResource ToggleSwitchHeaderForeground}"
                                IsHitTestVisible="False"
                                Margin="{DynamicResource ToggleSwitchTopHeaderMargin}"
                                TextWrapping="Wrap"
                                VerticalAlignment="Top"
                                Visibility="Collapsed"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <!--MinWidth="{DynamicResource ToggleSwitchThemeMinWidth}"-->
                                <Grid
                                Grid.Row="1"
                                MinWidth="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">

                                    <Grid.RowDefinitions>
                                        <RowDefinition ui:RowDefinitionHelper.PixelHeight="{DynamicResource ToggleSwitchPreContentMargin}" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition ui:RowDefinitionHelper.PixelHeight="{DynamicResource ToggleSwitchPostContentMargin}" />
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="12" MaxWidth="12" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="SwitchAreaGrid" Grid.RowSpan="3" Grid.ColumnSpan="3"
                                    Margin="0,5"
                                    ui:FocusVisualHelper.IsTemplateFocusTarget="True"
                                    Background="{DynamicResource ToggleSwitchContainerBackground}" />
                                    <ContentPresenter x:Name="OffContentPresenter" Grid.RowSpan="3" Grid.Column="0"
                                    Opacity="0"
                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                    IsHitTestVisible="False"
                                    Content="{TemplateBinding OffContent}"
                                    ContentTemplate="{TemplateBinding OffContentTemplate}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <ContentPresenter x:Name="OnContentPresenter" Grid.RowSpan="3" Grid.Column="0"
                                    Opacity="0"
                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                    IsHitTestVisible="False"
                                    Content="{TemplateBinding OnContent}"
                                    ContentTemplate="{TemplateBinding OnContentTemplate}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Rectangle x:Name="OuterBorder" Grid.Row="1" Grid.Column="2"
                                    Height="20"
                                    Width="40"
                                    RadiusX="10"
                                    RadiusY="10"
                                    Fill="{DynamicResource ToggleSwitchFillOff}"
                                    Stroke="{DynamicResource ToggleSwitchStrokeOff}"
                                    StrokeThickness="{DynamicResource ToggleSwitchOuterBorderStrokeThickness}" />
                                    <Rectangle x:Name="SwitchKnobBounds" Grid.Row="1" Grid.Column="2"
                                    Height="20"
                                    Width="40"
                                    RadiusX="10"
                                    RadiusY="10"
                                    Fill="{DynamicResource ToggleSwitchFillOn}"
                                    Stroke="{DynamicResource ToggleSwitchStrokeOn}"
                                    StrokeThickness="{DynamicResource ToggleSwitchOnStrokeThickness}"
                                    Opacity="0" />
                                    <Grid x:Name="SwitchKnob" Grid.Row="1" Grid.Column="2"
                                    HorizontalAlignment="Left"
                                    Width="20"
                                    Height="20">
                                        <Ellipse
                                        x:Name="SwitchKnobOn"
                                        Fill="{DynamicResource ToggleSwitchKnobFillOn}"
                                        Width="10"
                                        Height="10"
                                        Opacity="0" />
                                        <Ellipse
                                        x:Name="SwitchKnobOff"
                                        Fill="{DynamicResource ToggleSwitchKnobFillOff}"
                                        Width="10"
                                        Height="10" />
                                        <Grid.RenderTransform>
                                            <TranslateTransform x:Name="KnobTranslateTransform" />
                                        </Grid.RenderTransform>
                                    </Grid>
                                    <Thumb x:Name="SwitchThumb" Grid.RowSpan="3" Grid.ColumnSpan="3">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Rectangle Fill="Transparent" />
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- PointerOver -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition SourceName="SwitchThumb" Property="IsDragging" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchStrokeOffPointerOver}" />
                                <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchFillOffPointerOver}" />
                                <Setter Property="Fill" TargetName="SwitchKnobOff" Value="{DynamicResource ToggleSwitchKnobFillOffPointerOver}" />
                                <Setter Property="Fill" TargetName="SwitchKnobOn" Value="{DynamicResource ToggleSwitchKnobFillOnPointerOver}" />
                                <Setter Property="Fill" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchFillOnPointerOver}" />
                                <Setter Property="Stroke" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchStrokeOnPointerOver}" />
                                <Setter Property="Background" TargetName="SwitchAreaGrid" Value="{DynamicResource ToggleSwitchContainerBackgroundPointerOver}" />
                            </MultiTrigger>
                            <!-- Pressed -->
                            <Trigger SourceName="SwitchThumb" Property="IsDragging" Value="true">
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchStrokeOffPressed}" />
                                <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchFillOffPressed}" />
                                <Setter Property="Fill" TargetName="SwitchKnobOff" Value="{DynamicResource ToggleSwitchKnobFillOffPressed}" />
                                <Setter Property="Fill" TargetName="SwitchKnobOn" Value="{DynamicResource ToggleSwitchKnobFillOnPressed}" />
                                <Setter Property="Fill" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchFillOnPressed}" />
                                <Setter Property="Stroke" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchStrokeOnPressed}" />
                                <Setter Property="Background" TargetName="SwitchAreaGrid" Value="{DynamicResource ToggleSwitchContainerBackgroundPressed}" />
                            </Trigger>
                            <!-- Disabled -->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" TargetName="HeaderContentPresenter" Value="{DynamicResource ToggleSwitchHeaderForegroundDisabled}" />
                                <Setter Property="TextElement.Foreground" TargetName="OffContentPresenter" Value="{DynamicResource ToggleSwitchContentForegroundDisabled}" />
                                <Setter Property="TextElement.Foreground" TargetName="OnContentPresenter" Value="{DynamicResource ToggleSwitchContentForegroundDisabled}" />
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchStrokeOffDisabled}" />
                                <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchFillOffDisabled}" />
                                <Setter Property="Fill" TargetName="SwitchKnobOff" Value="{DynamicResource ToggleSwitchKnobFillOffDisabled}" />
                                <Setter Property="Fill" TargetName="SwitchKnobOn" Value="{DynamicResource ToggleSwitchKnobFillOnDisabled}" />
                                <Setter Property="Fill" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchFillOnDisabled}" />
                                <Setter Property="Stroke" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchStrokeOnDisabled}" />
                                <Setter Property="Background" TargetName="SwitchAreaGrid" Value="{DynamicResource ToggleSwitchContainerBackgroundDisabled}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <!--账号管理-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ui:CommandBar Grid.Row="0">
                <ui:AppBarButton Label="添加一个新账号" Command="{Binding AddUserCommand}">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon Glyph="&#xE8FA;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
                <ui:AppBarButton Label="删除当前账号" Command="{Binding RemoveUserCommand}">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon Glyph="&#xE74D;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
            </ui:CommandBar>
            <s:SmoothScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Hidden">
                <ui:ListView
                        Padding="0" 
                        ItemsSource="{Binding CookieUserInfos}" 
                        SelectedItem="{Binding SelectedCookieUserInfo}" 
                        SelectionMode="Single"
                        HorizontalContentAlignment="Left">
                    <ui:ListView.Resources>
                        <Style TargetType="ui:ListViewItem">
                            <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
                            <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}" />
                            <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
                            <!--<Setter Property="IsHoldingEnabled" Value="True" />-->
                            <Setter Property="Padding" Value="0,0,0,0" />
                            <Setter Property="Margin" Value="0,0,12,12"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="MinWidth" Value="{DynamicResource ListViewItemMinWidth}" />
                            <Setter Property="MinHeight" Value="{DynamicResource ListViewItemMinHeight}" />
                            <Setter Property="UseSystemFocusVisuals" Value="{DynamicResource UseSystemFocusVisuals}" />
                            <Setter Property="FocusVisualMargin" Value="0" />
                            <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ui:ListViewItem">
                                        <ControlTemplate.Resources>
                                            <StreamGeometry x:Key="CheckMark">M 17.939453 5.439453 L 7.5 15.888672 L 2.060547 10.439453 L 2.939453 9.560547 L 7.5 14.111328 L 17.060547 4.560547 Z</StreamGeometry>
                                        </ControlTemplate.Resources>
                                        <Border 
                                            x:Name="ContentBorder"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{x:Null}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{TemplateBinding CornerRadius}"
                                            SnapsToDevicePixels="True">
                                            <VisualStateManager.CustomVisualStateManager>
                                                <ui:SimpleVisualStateManager />
                                            </VisualStateManager.CustomVisualStateManager>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="MultiSelectStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition From="MultiSelectDisabled" To="MultiSelectEnabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
                                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
                                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
                                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                                                                    <DiscreteThicknessKeyFrame KeyTime="0" Value="32,0,0,0" />
                                                                </ThicknessAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualTransition>
                                                        <VisualTransition From="MultiSelectEnabled" To="MultiSelectDisabled">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="-32" KeySpline="0.1,0.9,0.2,1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="32" KeySpline="0.1,0.9,0.2,1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
                                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="{x:Static Visibility.Collapsed}" />
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualTransition>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="MultiSelectDisabled">
                                                        <Storyboard>
                                                            <DoubleAnimation 
                                                                Storyboard.TargetName="MultiSelectCheckBoxTransform"
                                                                Storyboard.TargetProperty="X"
                                                                From="0"
                                                                To="-32"
                                                                Duration="0" />
                                                            <DoubleAnimation
                                                                Storyboard.TargetName="MultiSelectClipTransform"
                                                                Storyboard.TargetProperty="X"
                                                                From="0"
                                                                To="32"
                                                                Duration="0" />
                                                            <DoubleAnimation
                                                                Storyboard.TargetName="ContentPresenterTranslateTransform"
                                                                Storyboard.TargetProperty="X"
                                                                From="32"
                                                                To="0"
                                                                Duration="0" />
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="MultiSelectEnabled">
                                                        <Storyboard>
                                                            <DoubleAnimation
                                                                Storyboard.TargetName="MultiSelectCheckBoxTransform"
                                                                Storyboard.TargetProperty="X"
                                                                From="-32"
                                                                To="0"
                                                                Duration="0" />
                                                            <DoubleAnimation
                                                                Storyboard.TargetName="MultiSelectClipTransform"
                                                                Storyboard.TargetProperty="X"
                                                                From="32"
                                                                To="0"
                                                                Duration="0" />
                                                            <DoubleAnimation
                                                                Storyboard.TargetName="ContentPresenterTranslateTransform"
                                                                Storyboard.TargetProperty="X"
                                                                From="-32"
                                                                To="0"
                                                                Duration="0" />
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                                                                <DiscreteThicknessKeyFrame KeyTime="0" Value="32,0,0,0" />
                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Grid>

                                                <Grid 
                                                    x:Name="ContentPresenterGrid"
                                                    Background="Transparent"
                                                    Margin="0,0,0,0">
                                                    <Grid.RenderTransform>
                                                        <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
                                                    </Grid.RenderTransform>
                                                    <ContentPresenter 
                                                        x:Name="ContentPresenter"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        Margin="{TemplateBinding Padding}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Grid>
                                                <Border 
                                                    x:Name="BorderBackground" HorizontalAlignment="Left" MinWidth="2"
                                                    IsHitTestVisible="False"
                                                    Background = "{DynamicResource SystemControlHighlightListAccentLowBrush}"
                                                    Opacity="0" CornerRadius="1"/>
                                                <Border
                                                    x:Name="MultiSelectSquare"
                                                    BorderBrush="{DynamicResource SystemControlForegroundBaseMediumHighBrush}"
                                                    BorderThickness="2"
                                                    Width="20"
                                                    Height="20"
                                                    Margin="12,0,0,0"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"
                                                    Visibility="Collapsed">
                                                    <Border.Clip>
                                                        <RectangleGeometry Rect="0,0,20,20">
                                                            <RectangleGeometry.Transform>
                                                                <TranslateTransform x:Name="MultiSelectClipTransform" />
                                                            </RectangleGeometry.Transform>
                                                        </RectangleGeometry>
                                                    </Border.Clip>
                                                    <Border.RenderTransform>
                                                        <TranslateTransform x:Name="MultiSelectCheckBoxTransform" />
                                                    </Border.RenderTransform>
                                                    <ui:FontIconFallback 
                                                        x:Name="MultiSelectCheck"
                                                        FontFamily="{DynamicResource SymbolThemeFontFamily}"
                                                        Data="{StaticResource CheckMark}"
                                                        FontSize="16"
                                                        Foreground="{DynamicResource SystemControlForegroundBaseMediumHighBrush}"
                                                        Visibility="Collapsed"
                                                        Opacity="0" />
                                                </Border>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                    <Condition Property="IsSelected" Value="False" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="BorderBackground" Property="Opacity" Value="0" />
                                                <Setter TargetName="BorderBackground" Property="Background" Value="{DynamicResource SystemControlHighlightListLowBrush}" />
                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                                <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                                <Setter TargetName="MultiSelectCheck" Property="Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="False" />
                                                    <Condition Property="IsSelected" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="MultiSelectCheck" Property="Opacity" Value="1" />
                                                <Setter TargetName="BorderBackground" Property="Opacity" Value="1" />
                                                <Setter TargetName="BorderBackground" Property="Background" Value="{DynamicResource SystemControlHighlightListAccentLowBrush}" />
                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                                <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                                <Setter TargetName="MultiSelectCheck" Property="Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                    <Condition Property="IsSelected" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="MultiSelectCheck" Property="Opacity" Value="1" />
                                                <Setter TargetName="BorderBackground" Property="Opacity" Value="1" />
                                                <Setter TargetName="BorderBackground" Property="Background" Value="{DynamicResource SystemControlHighlightListAccentMediumBrush}" />
                                                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                                <Setter TargetName="MultiSelectSquare" Property="BorderBrush" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                                <Setter TargetName="MultiSelectCheck" Property="Foreground" Value="{DynamicResource SystemControlHighlightAltBaseHighBrush}" />
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="ContentBorder" Property="Opacity" Value="{DynamicResource ListViewItemDisabledThemeOpacity}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ui:ListView.Resources>
                    <ui:ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid RenderOptions.BitmapScalingMode="Fant">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Ellipse Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                        Width="50" Height="50" Margin="6,6,12,6">
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="{Binding UserInfo.AvatarUrl}"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                        Width="64" Height="64" Margin="6,6,12,6">
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="{Binding UserInfo.Pendant,FallbackValue={x:Null}}"/>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <StackPanel Grid.Column="1" VerticalAlignment="Center">
                                    <TextBlock Text="{Binding UserInfo.Nickname}" Style="{StaticResource SubtitleTextBlockStyle}" TextTrimming="CharacterEllipsis"/>
                                    <TextBlock Text="{Binding UserInfo.Uid}" Margin="0,4,0,0"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ui:ListView.ItemTemplate>
                </ui:ListView>
            </s:SmoothScrollViewer>
        </Grid>
        <!--实时便笺-->
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ui:CommandBar>
                <ui:CommandBar.Content>
                    <StackPanel Orientation="Horizontal">
                        <ui:AppBarSeparator Margin="-10,0"/>
                        <ComboBox
                            ItemsSource="{Binding CookieUserGameRoles}"
                            SelectedItem="{Binding SelectedCookieGameRole,Mode=TwoWay}"
                            Margin="0,4,0,0"/>
                    </StackPanel>
                </ui:CommandBar.Content>
                <ui:AppBarButton Label="立即刷新" Icon="Refresh" Command="{Binding RefreshDailyNoteCommand}"/>
            </ui:CommandBar>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition MaxWidth="400"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Width="332" Margin="12,0" HorizontalAlignment="Left">
                    <wu:Card Padding="0" Margin="0,12,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <ui:ProgressBar 
                            Grid.ColumnSpan="2"
                            VerticalAlignment="Bottom" 
                            Background="Transparent"
                            Value="{Binding DailyNote.CurrentResin}"
                            Minimum="0" Margin="6,0,6,4" MinHeight="2" Height="2"
                            Maximum="{Binding DailyNote.MaxResin}"/>

                            <StackPanel Grid.Column="0" Margin="8">
                                <TextBlock Text="原粹树脂" Style="{StaticResource BaseTextBlockStyle}"/>
                                <TextBlock Margin="0,4,0,0" Text="{Binding DailyNote.ResinRecoveryTargetTimeFormatted,StringFormat={}将于 {0} 全部恢复}" 
                                                       Style="{StaticResource CaptionTextBlockStyle}"/>
                            </StackPanel>
                            <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}/{1}">
                                        <Binding Path="DailyNote.CurrentResin"/>
                                        <Binding Path="DailyNote.MaxResin"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>
                    </wu:Card>
                    <wu:Card Padding="0" Margin="0,12,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <ui:ProgressBar
                            Grid.ColumnSpan="2"
                            VerticalAlignment="Bottom" 
                            Background="Transparent"
                            Value="{Binding DailyNote.CurrentHomeCoin}"
                            Minimum="0" Margin="6,0,6,4" MinHeight="2" Height="2"
                            Maximum="{Binding DailyNote.MaxHomeCoin}"/>
                            <StackPanel Grid.Column="0" Margin="8">
                                <TextBlock Text="洞天宝钱" Style="{StaticResource BaseTextBlockStyle}"/>
                                <TextBlock Margin="0,4,0,0" Text="{Binding DailyNote.HomeCoinRecoveryTargetTimeFormatted,StringFormat={}将于 {0} 全部恢复}" 
                                                       Style="{StaticResource CaptionTextBlockStyle}"/>
                            </StackPanel>
                            <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="6">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}/{1}">
                                        <Binding Path="DailyNote.CurrentHomeCoin"/>
                                        <Binding Path="DailyNote.MaxHomeCoin"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>
                    </wu:Card>
                    <wu:Card Padding="0" Margin="0,12,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <ui:ProgressBar
                            Grid.ColumnSpan="2"
                            VerticalAlignment="Bottom" 
                            Background="Transparent"
                            Value="{Binding DailyNote.FinishedTaskNum}"
                            Minimum="0" Margin="6,0,6,4" MinHeight="2" Height="2"
                            Maximum="{Binding DailyNote.TotalTaskNum}"/>
                            <StackPanel Grid.Column="0" Margin="8">
                                <TextBlock Text="每日委托任务" Style="{StaticResource BaseTextBlockStyle}"/>
                                <TextBlock Margin="0,4,0,0" Text="{Binding DailyNote.ExtraTaskRewardDescription}" Style="{StaticResource CaptionTextBlockStyle}"/>
                            </StackPanel>
                            <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}/{1}">
                                        <Binding Path="DailyNote.FinishedTaskNum"/>
                                        <Binding Path="DailyNote.TotalTaskNum"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>
                    </wu:Card>
                    <wu:Card Padding="0" Margin="0,12,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <ui:ProgressBar
                            Grid.ColumnSpan="2"
                            VerticalAlignment="Bottom" 
                            Background="Transparent"
                            Value="{Binding DailyNote.ResinDiscountUsedNum,Mode=OneWay}"
                            Minimum="0" Margin="6,0,6,4" MinHeight="2" Height="2"
                            Maximum="{Binding DailyNote.ResinDiscountNumLimit}"/>
                            <StackPanel Grid.Column="0" Margin="8">
                                <TextBlock Text="值得铭记的强敌" Style="{StaticResource BaseTextBlockStyle}"/>
                                <TextBlock Margin="0,4,0,0" Text="本周已使用消耗减半次数" Style="{StaticResource CaptionTextBlockStyle}"/>
                            </StackPanel>
                            <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}/{1}">
                                        <Binding Path="DailyNote.ResinDiscountUsedNum"/>
                                        <Binding Path="DailyNote.ResinDiscountNumLimit"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>
                    </wu:Card>
                    <wu:Card Padding="0" Margin="0,12,0,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Column="0" Margin="8">
                                <TextBlock Text="探索派遣" Style="{StaticResource BaseTextBlockStyle}"/>
                                <TextBlock Margin="0,4,0,0" Style="{StaticResource CaptionTextBlockStyle}">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}限制：{0}/{1}">
                                            <Binding Path="DailyNote.CurrentExpeditionNum"/>
                                            <Binding Path="DailyNote.MaxExpeditionNum"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                            <ItemsControl Grid.Row="1" Margin="8,0,8,16" ItemsSource="{Binding DailyNote.Expeditions}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0,8,0,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <c:CachedImage Width="32" Height="32" ImageUrl="{Binding AvatarSideIcon}"/>
                                            <TextBlock Margin="0,0,6,0"
                                            Grid.Column="1"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Right"
                                            Text="{Binding RemainedTimeFormatted,StringFormat={}剩余探索时间：{0}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </wu:Card>
                </StackPanel>
                <s:SmoothScrollViewer Grid.Column="1">
                    <StackPanel  Margin="0,0,16,12" HorizontalAlignment="Stretch">
                        <wu:CardExpander
                            MaxWidth="400" MinWidth="280"
                            Header="原粹树脂提醒" Subtitle="当原粹树脂到达或超过某一数值时提醒我" Margin="0,12,0,0">
                            <StackPanel>
                                <wu:CardControl BorderBrush="{x:Null}" Background="Transparent"
                                            Title="20" Subtitle="当我的树脂到达或超过 20 时提醒我">
                                    <ui:ToggleSwitch IsOn="{Binding DailyNoteNotifyConfiguration.NotifyOnResinReach20}"/>
                                </wu:CardControl>
                                <wu:CardControl BorderBrush="{x:Null}" Background="Transparent"
                                            Title="40" Subtitle="当原粹树脂到达或超过 40 时提醒我">
                                    <ui:ToggleSwitch IsOn="{Binding DailyNoteNotifyConfiguration.NotifyOnResinReach40}"/>
                                </wu:CardControl>
                                <wu:CardControl BorderBrush="{x:Null}" Background="Transparent"
                                            Title="80" Subtitle="当原粹树脂到达或超过 80 时提醒我">
                                    <ui:ToggleSwitch IsOn="{Binding DailyNoteNotifyConfiguration.NotifyOnResinReach80}"/>
                                </wu:CardControl>
                                <wu:CardControl BorderBrush="{x:Null}" Background="Transparent"
                                            Title="120" Subtitle="当原粹树脂到达或超过 120 时提醒我">
                                    <ui:ToggleSwitch IsOn="{Binding DailyNoteNotifyConfiguration.NotifyOnResinReach120}"/>
                                </wu:CardControl>
                                <wu:CardControl BorderBrush="{x:Null}" Background="Transparent"
                                            Title="155" Subtitle="当原粹树脂到达或超过 155 时提醒我">
                                    <ui:ToggleSwitch IsOn="{Binding DailyNoteNotifyConfiguration.NotifyOnResinReach155}"/>
                                </wu:CardControl>
                            </StackPanel>
                        </wu:CardExpander>
                        <wu:CardExpander
                            MaxWidth="400" MinWidth="280"
                            Header="其他提醒" Subtitle="其他很有用的提醒" Margin="0,12,0,0">
                            <StackPanel>
                                <wu:CardControl BorderBrush="{x:Null}" Background="Transparent"
                                            Title="80%" Subtitle="当洞天宝钱到达或超过 80% 最大容量时提醒我">
                                    <ui:ToggleSwitch IsOn="{Binding DailyNoteNotifyConfiguration.NotifyOnHomeCoinReach80Percent}"/>
                                </wu:CardControl>
                                <wu:CardControl BorderBrush="{x:Null}" Background="Transparent"
                                            Title="每日任务" Subtitle="当每日任务未完成或完成但未领取奖励时提醒我">
                                    <ui:ToggleSwitch IsOn="{Binding DailyNoteNotifyConfiguration.NotifyOnDailyTasksIncomplete}"/>
                                </wu:CardControl>
                                <wu:CardControl BorderBrush="{x:Null}" Background="Transparent"
                                            Title="探索派遣" Subtitle="当探索派遣全部完成时提醒我">
                                    <ui:ToggleSwitch IsOn="{Binding DailyNoteNotifyConfiguration.NotifyOnExpeditionsComplete}"/>
                                </wu:CardControl>
                            </StackPanel>
                        </wu:CardExpander>
                    </StackPanel>
                </s:SmoothScrollViewer>
            </Grid>
        </Grid>
    </Grid>
</Page>
