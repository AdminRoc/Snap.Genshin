<Page x:Class="DGP.Genshin.Page.SettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:ui="http://schemas.modernwpf.com/2019"
      xmlns:s="clr-namespace:DGP.Genshin.Control.Infrastructure.SmoothScrollViewer"
      xmlns:wu="clr-namespace:WPFUI.Controls;assembly=WPFUI"
      xmlns:sys="clr-namespace:System;assembly=System.Runtime"
      xmlns:helper="clr-namespace:DGP.Genshin.Control.Helper"
      mc:Ignorable="d" 
      d:DesignHeight="2000" 
      d:DesignWidth="800"
      Title="设置">
    <Page.Resources>
        <Style TargetType="ComboBox" BasedOn="{StaticResource DefaultComboBoxStyle}">
            <Setter Property="MinWidth" Value="120"/>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
            <Setter Property="MinWidth" Value="120"/>
        </Style>

        <sys:TimeSpan x:Key="RepositionDelay">0:0:0.033</sys:TimeSpan>
        <KeyTime x:Key="RepositionDuration">0:0:0.367</KeyTime>
        <KeySpline x:Key="RepositionKeySpline">0.1,0.9 0.2,1.0</KeySpline>
        <!--Rewrite ToggleSwitch Style-->
        <Style TargetType="ui:ToggleSwitch">
            <Setter Property="Foreground" Value="{DynamicResource ToggleSwitchContentForeground}" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="{DynamicResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
            <Setter Property="ui:FocusVisualHelper.FocusVisualMargin" Value="-7,-3,-7,-3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ui:ToggleSwitch">
                        <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        SnapsToDevicePixels="True">

                            <VisualStateManager.CustomVisualStateManager>
                                <ui:SimpleVisualStateManager />
                            </VisualStateManager.CustomVisualStateManager>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ToggleStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition x:Name="DraggingToOnTransition" From="Dragging" To="On" GeneratedDuration="0">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" BeginTime="{StaticResource RepositionDelay}">
                                                    <SplineDoubleKeyFrame KeyTime="{StaticResource RepositionDuration}" KeySpline="{StaticResource RepositionKeySpline}" Value="20" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="OnToDraggingTransition" From="On" To="Dragging" GeneratedDuration="0">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="DraggingToOffTransition" From="Dragging" To="Off" GeneratedDuration="0">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" BeginTime="{StaticResource RepositionDelay}">
                                                    <SplineDoubleKeyFrame KeyTime="{StaticResource RepositionDuration}" KeySpline="{StaticResource RepositionKeySpline}" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="OnToOffTransition" From="On" To="Off" GeneratedDuration="0">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" BeginTime="{StaticResource RepositionDelay}">
                                                    <SplineDoubleKeyFrame KeyTime="{StaticResource RepositionDuration}" KeySpline="{StaticResource RepositionKeySpline}" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="OffToOnTransition" From="Off" To="On" GeneratedDuration="0">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" BeginTime="{StaticResource RepositionDelay}">
                                                    <SplineDoubleKeyFrame KeyTime="{StaticResource RepositionDuration}" KeySpline="{StaticResource RepositionKeySpline}" Value="20" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Dragging" />
                                    <VisualState x:Name="Off">
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="KnobTranslateTransform"
                                            Storyboard.TargetProperty="X"
                                            To="0"
                                            Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="On">
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="KnobTranslateTransform"
                                            Storyboard.TargetProperty="X"
                                            To="20"
                                            Duration="0" />
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ContentStates">
                                    <VisualState x:Name="OffContent">
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="OffContentPresenter"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OffContentPresenter">
                                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OnContent">
                                        <Storyboard>
                                            <DoubleAnimation
                                            Storyboard.TargetName="OnContentPresenter"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OnContentPresenter">
                                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                                            </BooleanAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <ui:ContentPresenterEx
                                x:Name="HeaderContentPresenter"
                                Grid.Row="0"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                TextElement.Foreground="{DynamicResource ToggleSwitchHeaderForeground}"
                                IsHitTestVisible="False"
                                Margin="{DynamicResource ToggleSwitchTopHeaderMargin}"
                                TextWrapping="Wrap"
                                VerticalAlignment="Top"
                                Visibility="Collapsed"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <!--MinWidth="{DynamicResource ToggleSwitchThemeMinWidth}"-->
                                <Grid
                                Grid.Row="1"
                                MinWidth="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top">

                                    <Grid.RowDefinitions>
                                        <RowDefinition ui:RowDefinitionHelper.PixelHeight="{DynamicResource ToggleSwitchPreContentMargin}" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition ui:RowDefinitionHelper.PixelHeight="{DynamicResource ToggleSwitchPostContentMargin}" />
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="12" MaxWidth="12" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="SwitchAreaGrid" Grid.RowSpan="3" Grid.ColumnSpan="3"
                                    Margin="0,5"
                                    ui:FocusVisualHelper.IsTemplateFocusTarget="True"
                                    Background="{DynamicResource ToggleSwitchContainerBackground}" />
                                    <ContentPresenter x:Name="OffContentPresenter" Grid.RowSpan="3" Grid.Column="0"
                                    Opacity="0"
                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                    IsHitTestVisible="False"
                                    Content="{TemplateBinding OffContent}"
                                    ContentTemplate="{TemplateBinding OffContentTemplate}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <ContentPresenter x:Name="OnContentPresenter" Grid.RowSpan="3" Grid.Column="0"
                                    Opacity="0"
                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                    IsHitTestVisible="False"
                                    Content="{TemplateBinding OnContent}"
                                    ContentTemplate="{TemplateBinding OnContentTemplate}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Rectangle x:Name="OuterBorder" Grid.Row="1" Grid.Column="2"
                                    Height="20"
                                    Width="40"
                                    RadiusX="10"
                                    RadiusY="10"
                                    Fill="{DynamicResource ToggleSwitchFillOff}"
                                    Stroke="{DynamicResource ToggleSwitchStrokeOff}"
                                    StrokeThickness="{DynamicResource ToggleSwitchOuterBorderStrokeThickness}" />
                                    <Rectangle x:Name="SwitchKnobBounds" Grid.Row="1" Grid.Column="2"
                                    Height="20"
                                    Width="40"
                                    RadiusX="10"
                                    RadiusY="10"
                                    Fill="{DynamicResource ToggleSwitchFillOn}"
                                    Stroke="{DynamicResource ToggleSwitchStrokeOn}"
                                    StrokeThickness="{DynamicResource ToggleSwitchOnStrokeThickness}"
                                    Opacity="0" />
                                    <Grid x:Name="SwitchKnob" Grid.Row="1" Grid.Column="2"
                                    HorizontalAlignment="Left"
                                    Width="20"
                                    Height="20">
                                        <Ellipse
                                        x:Name="SwitchKnobOn"
                                        Fill="{DynamicResource ToggleSwitchKnobFillOn}"
                                        Width="10"
                                        Height="10"
                                        Opacity="0" />
                                        <Ellipse
                                        x:Name="SwitchKnobOff"
                                        Fill="{DynamicResource ToggleSwitchKnobFillOff}"
                                        Width="10"
                                        Height="10" />
                                        <Grid.RenderTransform>
                                            <TranslateTransform x:Name="KnobTranslateTransform" />
                                        </Grid.RenderTransform>
                                    </Grid>
                                    <Thumb x:Name="SwitchThumb" Grid.RowSpan="3" Grid.ColumnSpan="3">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="Thumb">
                                                <Rectangle Fill="Transparent" />
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- PointerOver -->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true" />
                                    <Condition SourceName="SwitchThumb" Property="IsDragging" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchStrokeOffPointerOver}" />
                                <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchFillOffPointerOver}" />
                                <Setter Property="Fill" TargetName="SwitchKnobOff" Value="{DynamicResource ToggleSwitchKnobFillOffPointerOver}" />
                                <Setter Property="Fill" TargetName="SwitchKnobOn" Value="{DynamicResource ToggleSwitchKnobFillOnPointerOver}" />
                                <Setter Property="Fill" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchFillOnPointerOver}" />
                                <Setter Property="Stroke" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchStrokeOnPointerOver}" />
                                <Setter Property="Background" TargetName="SwitchAreaGrid" Value="{DynamicResource ToggleSwitchContainerBackgroundPointerOver}" />
                            </MultiTrigger>
                            <!-- Pressed -->
                            <Trigger SourceName="SwitchThumb" Property="IsDragging" Value="true">
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchStrokeOffPressed}" />
                                <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchFillOffPressed}" />
                                <Setter Property="Fill" TargetName="SwitchKnobOff" Value="{DynamicResource ToggleSwitchKnobFillOffPressed}" />
                                <Setter Property="Fill" TargetName="SwitchKnobOn" Value="{DynamicResource ToggleSwitchKnobFillOnPressed}" />
                                <Setter Property="Fill" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchFillOnPressed}" />
                                <Setter Property="Stroke" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchStrokeOnPressed}" />
                                <Setter Property="Background" TargetName="SwitchAreaGrid" Value="{DynamicResource ToggleSwitchContainerBackgroundPressed}" />
                            </Trigger>
                            <!-- Disabled -->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" TargetName="HeaderContentPresenter" Value="{DynamicResource ToggleSwitchHeaderForegroundDisabled}" />
                                <Setter Property="TextElement.Foreground" TargetName="OffContentPresenter" Value="{DynamicResource ToggleSwitchContentForegroundDisabled}" />
                                <Setter Property="TextElement.Foreground" TargetName="OnContentPresenter" Value="{DynamicResource ToggleSwitchContentForegroundDisabled}" />
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchStrokeOffDisabled}" />
                                <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource ToggleSwitchFillOffDisabled}" />
                                <Setter Property="Fill" TargetName="SwitchKnobOff" Value="{DynamicResource ToggleSwitchKnobFillOffDisabled}" />
                                <Setter Property="Fill" TargetName="SwitchKnobOn" Value="{DynamicResource ToggleSwitchKnobFillOnDisabled}" />
                                <Setter Property="Fill" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchFillOnDisabled}" />
                                <Setter Property="Stroke" TargetName="SwitchKnobBounds" Value="{DynamicResource ToggleSwitchStrokeOnDisabled}" />
                                <Setter Property="Background" TargetName="SwitchAreaGrid" Value="{DynamicResource ToggleSwitchContainerBackgroundDisabled}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid>
        <s:SmoothScrollViewer Margin="0,0,0,0">
            <StackPanel Margin="0,0,0,12">
                <TextBlock Text="外观" Style="{StaticResource BaseTextBlockStyle}" Margin="12,0,0,0"/>
                <wu:CardControl helper:IconHelper.Icon="&#xE790;" Icon="DarkTheme24" Title="主题" Subtitle="更改应用的主题颜色" Margin="12,12,16,0">
                    <ComboBox ItemsSource="{Binding Themes}" SelectedItem="{Binding SelectedTheme}" DisplayMemberPath="Name"/>
                </wu:CardControl>

                <TextBlock Text="启动" Style="{StaticResource BaseTextBlockStyle}" Margin="12,36,0,0"/>
                <wu:CardControl helper:IconHelper.Icon="&#xF71C;" Title="开机时启动" Subtitle="启用此项以便执行某些自动化操作,若设置了始终以管理员模式启动则不会生效" Margin="12,12,16,0">
                    <ui:ToggleSwitch IsOn="{Binding AutoRun.IsAutoRun}"/>
                </wu:CardControl>
                <wu:CardControl helper:IconHelper.Icon="&#xED1A;" Title="隐式初始化" Subtitle="首次初始化完成后立即关闭主窗口，仅在启用托盘图标后有效" Margin="12,12,16,0">
                    <ui:ToggleSwitch IsOn="{Binding CloseMainWindowAfterInitializaion}"/>
                </wu:CardControl>
                <wu:CardControl helper:IconHelper.Icon="&#xE9D5;" Title="跳过缓存完整性检查" Subtitle="启用此项可以显著加快启动速度，但也会带来很多图片加载问题" Margin="12,4,16,0">
                    <ui:ToggleSwitch IsOn="{Binding SkipCacheCheck}"/>
                </wu:CardControl>

                <TextBlock Text="标题栏" Style="{StaticResource BaseTextBlockStyle}" Margin="12,36,0,0"/>
                <wu:CardAction 
                    helper:IconHelper.Icon="&#xE8D7;"
                    helper:CardHelper.ActionTitle="开启实时便笺权限"
                    helper:CardHelper.ActionSubtitle="尝试开启当前账户的实时便笺权限"
                    Command="{Binding EnableDailyNoteCommand}"
                    Margin="12,12,16,0"/>

                <TextBlock Text="米游社签到" Style="{StaticResource BaseTextBlockStyle}" Margin="12,36,0,0"/>
                <wu:CardControl helper:IconHelper.Icon="&#xE73E;" Title="自动签到" Subtitle="每日首次启动时签到，如果存在多个账号，所有账户的均会签到" Margin="12,12,16,0">
                    <ui:ToggleSwitch IsOn="{Binding AutoDailySignInOnLaunch}"/>
                </wu:CardControl>
                <wu:CardControl helper:IconHelper.Icon="&#xE8EE;" Title="立即全部签到" Subtitle="立即对所有账号下的所有角色进行签到" Margin="12,4,16,0">
                    <Button Content="签到" Command="{Binding SignInImmediatelyCommand}"/>
                </wu:CardControl>
                <wu:CardControl helper:IconHelper.Icon="&#xE7ED;" Title="静默签到" Subtitle="签到通知直接进入通知中心，不再直接弹出" Margin="12,12,16,0">
                    <ui:ToggleSwitch Grid.Column="1" IsOn="{Binding SignInSilently}"/>
                </wu:CardControl>

                <TextBlock Text="交互" Style="{StaticResource BaseTextBlockStyle}" Margin="12,36,0,0"/>
                <wu:CardControl helper:IconHelper.Icon="&#xECAA;" Title="系统托盘图标" Subtitle="在系统托盘区域显示图标，下次启动时生效" Margin="12,12,16,0">
                    <ui:ToggleSwitch IsOn="{Binding IsTaskBarIconEnabled}"/>
                </wu:CardControl>

                <TextBlock Text="桌面小组件" Style="{StaticResource BaseTextBlockStyle}" Margin="12,36,0,0"/>
                <wu:CardControl helper:IconHelper.Icon="&#xE72C;" Title="树脂小组件刷新时间" Subtitle="设置桌面上的树脂小组件（需要启用托盘图标）的刷新间隔时间" Margin="12,12,16,0">
                    <ComboBox ItemsSource="{Binding ResinAutoRefreshTime,Mode=OneWay}" SelectedItem="{Binding SelectedResinAutoRefreshTime}" DisplayMemberPath="Name"/>
                </wu:CardControl>

                <TextBlock Text="缓存" Style="{StaticResource BaseTextBlockStyle}" Margin="12,36,0,0"/>
                <wu:CardAction helper:IconHelper.Icon="&#xE838;" 
                               helper:CardHelper.ActionTitle="打开图片缓存文件夹" 
                               helper:CardHelper.ActionSubtitle="大部分图片资源缓存在这个文件夹内" 
                               Command="{Binding OpenCacheFolderCommand}"
                               Margin="12,12,16,0"/>

                <TextBlock Text="关于 Snap 原神" Style="{StaticResource BaseTextBlockStyle}" Margin="12,36,0,0"/>
                <wu:CardControl helper:IconHelper.Icon="&#xE70B;" Title="用户手册" Subtitle="查看Snap Genshin 的用户手册以及其他注意事项" Margin="12,12,16,0">
                    <wu:Hyperlink Content="前往查看" NavigateUri="https://www.snapgenshin.com/home/"/>
                </wu:CardControl>
                <wu:CardControl helper:IconHelper.Icon="&#xE946;" Title="Snap 原神" Subtitle="{Binding VersionString}" Margin="12,12,16,0">
                    <Button Tag="Github" Content="检查更新并安装" Command="{Binding CheckUpdateCommand}"/>
                </wu:CardControl>
                <wu:Card Margin="12,4,16,0" Visibility="{Binding UpdateInfo.IsDownloading,Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="下载更新中" Style="{StaticResource BodyTextBlockStyle}" HorizontalAlignment="Left"/>
                        <TextBlock Text="{Binding UpdateInfo.ValueString}" Style="{StaticResource BodyTextBlockStyle}" HorizontalAlignment="Right"/>
                        <ProgressBar Margin="0,4,0,0" Grid.Row="1" Value="{Binding UpdateInfo.Value,Mode=OneWay}" Maximum="1"/>
                    </Grid>
                </wu:Card>
                <wu:CardControl helper:IconHelper.Icon="&#xE896;" Title="FastGit" Subtitle="使用 FastGit 代替 Github 下载更新，也许能改善下载速度，下一次下载开始生效" Margin="12,4,16,0">
                    <ui:ToggleSwitch IsOn="{Binding UpdateUseFastGit}"/>
                </wu:CardControl>
                <wu:CardControl helper:IconHelper.Icon="&#xE70B;" Title="最新版本 &amp; 更新日志" Subtitle="前往Github查看最新版本以及更新日志" Margin="12,4,16,0">
                    <wu:Hyperlink Content="前往查看" NavigateUri="https://github.com/DGP-Studio/Snap.Genshin/releases/latest"/>
                </wu:CardControl>
                
                <wu:CardAction helper:IconHelper.Icon="&#xEB51;" helper:CardHelper.ActionTitle="赞助者名单" Command="{Binding SponsorUICommand}"
                               helper:CardHelper.ActionSubtitle="如果你觉得 Snap Genshin 还不错，欢迎对我们进行赞助" Margin="12,12,16,0"
                               BorderBrush="{StaticResource SystemControlBackgroundAccentBrush}"/>

                <wu:CardExpander helper:IconHelper.Icon="&#xED15;" Header="联系我们" Subtitle="如果你在使用软件的过程中遇到问题，或是单纯的想聊聊天，可以看看这里" Margin="12,12,16,0">
                    <UniformGrid Columns="4" Margin="12">
                        <wu:Hyperlink NavigateUri="https://github.com/DGP-Studio/Snap.Genshin/issues/new/choose" 
                                            Content="前往 Github 提交 Issue" Padding="4"/>
                        <wu:Hyperlink NavigateUri="https://jq.qq.com/?_wv=1027&amp;k=MHLNhhYJ"
                                            Content="反馈群 910780153" Padding="4"/>
                        <wu:Hyperlink NavigateUri="https://jq.qq.com/?_wv=1027&amp;k=cgh9S2XW"
                                            Content="闲聊群 547288075" Padding="4"/>
                        <wu:Hyperlink NavigateUri="https://jq.qq.com/?_wv=1027&amp;k=Wpcad0lD"
                                            Content="开发群 982424236" Padding="4"/>
                    </UniformGrid>
                </wu:CardExpander>
                <wu:CardControl helper:IconHelper.Icon="&#xE772;" Title="用户设备ID" Subtitle="{Binding UserId}" Margin="12,4,16,0">
                    <Button Content="复制到剪贴板" Margin="6,0,0,0" Command="{Binding CopyUserIdCommand}"/>
                </wu:CardControl>
            </StackPanel>
        </s:SmoothScrollViewer>
    </Grid>
</Page>
